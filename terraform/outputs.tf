output "ec2_public_ip" {
  value = module.ec2.ec2_public_ip
}

output "ec2_public_dns" {
  value = module.ec2.ec2_public_dns
}

output "db_endpoint" {
  value = module.db.db_endpoint
}

output "db_port" {
  value = module.db.db_port
}

output "db_username" {
  value = module.db.db_username
}

output "db_password" {
  value = module.db.db_password
  sensitive = true
}

output "db_name" {
  value = module.db.db_name
}

output "memcached_endpoint" {
  value = module.memcached.memcached_endpoint
}

output "s3_endpoint" {
  value = module.s3.s3_endpoint
}

output "s3_bucket_name" {
  value = module.s3.s3_bucket_name
}

output "secret_key" {
  sensitive = true
  value     = module.iam.secret_key
}

output "access_key" {
  value = module.iam.access_key
}

# Export Terraform variable values to an Ansible var_file
resource "local_file" "tf_ansible_vars_file_new" {
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    tf_db_endpoint: ${module.db.db_endpoint}
    tf_db_port: ${module.db.db_port}
    tf_db_username: ${module.db.db_username}
    tf_db_password: ${module.db.db_password}
    tf_db_name: ${module.db.db_name}
    tf_memcached_endpoint: ${module.memcached.memcached_endpoint}
    tf_s3_endpoint: ${module.s3.s3_endpoint}
    tf_s3_bucket_name: ${module.s3.s3_bucket_name}
    tf_access_key: ${module.iam.access_key}
    tf_secret_key: ${module.iam.secret_key}
    tf_aws_region: ${var.aws_region}
    DOC
  filename = "../ansible/vars/tf_ansible_vars_file.yml"
}

 resource "local_file" "ansible_inventory" {
  content = templatefile("./templates/hosts.tpl",
    {
      public_ips = module.ec2.ec2_public_ip.*,
    }
  )
  filename = "../ansible/hosts"
 }